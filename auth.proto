syntax = "proto3";

package auth;

import "validate/validate.proto";

option go_package = "./auth";

message SignUpRequest {
  string email = 1 [(validate.rules).string = {
    email: true,
    max_len: 64,
  }];
  string password = 2 [(validate.rules).string = {
    min_len: 8,
    max_len: 32,
  }];
  string fingerprint = 3 [(validate.rules).string = {
    min_len: 1,
  }];
}

message SignUpResponse {
  string user_id = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message SignInRequest {
  string email = 1 [(validate.rules).string = {
    email: true,
    max_len: 64,
  }];
  string password = 2 [(validate.rules).string = {
    min_len: 8,
    max_len: 32,
  }];
  string fingerprint = 3 [(validate.rules).string = {
    min_len: 1,
  }];
}

message SignInResponse {
  string user_id = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message VerifyAccessTokenRequest {
  string access_token = 1 [(validate.rules).string = {
    min_len: 20,
    max_len: 512,
  }];
}

message AccessTokenPayload {
  string user_id = 1;
}

message VerifyAccessTokenResponse {
  AccessTokenPayload payload = 1;
  bool is_valid = 2;
}

service Auth {
  rpc SignUp (SignUpRequest) returns (SignUpResponse);
  rpc SignIn (SignInRequest) returns (SignInResponse);
  rpc VerifyAccessToken(VerifyAccessTokenRequest) returns (VerifyAccessTokenResponse);
}